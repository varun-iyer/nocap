LOAD_PANDAS()
         362855466 function calls (360044859 primitive calls) in 1255.949 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    26132    0.038    0.000    0.332    0.000 <__array_function__ internals>:177(argsort)
    45731    0.046    0.000    0.668    0.000 <__array_function__ internals>:177(atleast_2d)
   313617    0.640    0.000   45.887    0.000 <__array_function__ internals>:177(concatenate)
   296684    0.662    0.000    1.911    0.000 <__array_function__ internals>:177(copyto)
    45636    0.110    0.000    1.219    0.000 <__array_function__ internals>:177(putmask)
    26132    0.039    0.000    7.394    0.000 <__array_function__ internals>:177(vstack)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:100(acquire)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1022(_find_and_load)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1038(_gcd_import)
   544133    0.935    0.000    1.243    0.000 <frozen importlib._bootstrap>:1053(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:125(release)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:165(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:169(__enter__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:173(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:179(_get_module_lock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:198(cb)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:244(_verbose_message)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:357(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:71(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:746(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:826(find_spec)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:893(__enter__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:897(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:921(_find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:968(_sanity_check)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:987(_find_and_load_unlocked)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:126(_path_join)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:128(<listcomp>)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1356(_path_importer_cache)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1399(_get_spec)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:140(_path_stat)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1431(find_spec)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1536(find_spec)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:71(_relax_case)
        1    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
        1    0.000    0.000 1255.949 1255.949 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:2(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:108(import_module)
    81730    0.165    0.000    0.203    0.000 _asarray.py:112(<setcomp>)
    81730    0.358    0.000    0.927    0.000 _asarray.py:31(require)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:262(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:280(__iter__)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:381(__subclasshook__)
       36    0.000    0.000    0.000    0.000 _collections_abc.py:409(__subclasshook__)
        3    0.000    0.000    0.000    0.000 _collections_abc.py:78(_check_methods)
        1    0.000    0.000    0.004    0.004 _decorators.py:170(wrapper)
   6536/2   15.334    0.002 1255.949  627.974 _decorators.py:323(wrapper)
    26152    0.033    0.000    0.066    0.000 _dtype.py:178(_datetime_metadata_str)
   234700    0.142    0.000    0.142    0.000 _dtype.py:24(_kind_name)
   234700    0.166    0.000    0.401    0.000 _dtype.py:330(_name_includes_bit_suffix)
    13066    0.031    0.000    0.157    0.000 _dtype.py:34(__str__)
   234700    0.618    0.000    1.332    0.000 _dtype.py:344(_name_get)
    57984    1.434    0.000    8.865    0.000 _exceptions.py:30(find_stack_level)
    82101    0.061    0.000    0.982    0.000 _methods.py:39(_amax)
    82101    0.079    0.000    1.503    0.000 _methods.py:43(_amin)
   137215    0.103    0.000    0.920    0.000 _methods.py:55(_any)
  1783577    1.380    0.000   14.485    0.000 _methods.py:61(_all)
    97995    0.021    0.000    0.021    0.000 _mixins.py:109(_box_func)
  1167796    5.549    0.000   64.606    0.000 _mixins.py:121(view)
    82101    0.277    0.000   14.886    0.000 _mixins.py:154(take)
    98012    0.439    0.000   63.688    0.001 _mixins.py:214(_concat_same_type)
    98012    0.249    0.000    0.491    0.000 _mixins.py:221(<setcomp>)
    98012    0.070    0.000    0.070    0.000 _mixins.py:225(<listcomp>)
  1729288    7.247    0.000   40.600    0.000 _mixins.py:283(__getitem__)
        1    0.000    0.000    0.000    0.000 _optional.py:90(import_optional_dependency)
    13066    0.046    0.000    0.049    0.000 _ufunc_config.py:132(geterr)
    13066    0.060    0.000    0.142    0.000 _ufunc_config.py:33(seterr)
     6533    0.011    0.000    0.011    0.000 _ufunc_config.py:426(__init__)
     6533    0.017    0.000    0.106    0.000 _ufunc_config.py:430(__enter__)
     6533    0.015    0.000    0.068    0.000 _ufunc_config.py:435(__exit__)
     6533    0.006    0.000    0.008    0.000 _validators.py:226(validate_bool_kwarg)
  1192938    0.452    0.000    1.411    0.000 abc.py:117(__instancecheck__)
    62/11    0.000    0.000    0.000    0.000 abc.py:121(__subclasscheck__)
    49469    0.131    0.000    0.687    0.000 algorithms.py:117(_ensure_data)
    82101    0.325    0.000   13.277    0.000 algorithms.py:1484(take)
    49469    0.153    0.000    0.456    0.000 algorithms.py:197(_reconstruct_data)
    49469    0.038    0.000    0.117    0.000 algorithms.py:235(_ensure_arraylike)
    49469    0.088    0.000    8.177    0.000 algorithms.py:269(_get_hashtable_algo)
    49469    0.400    0.000    7.401    0.000 algorithms.py:287(_check_object_for_strings)
    49469    0.081    0.000   21.302    0.000 algorithms.py:315(unique)
    49469    0.402    0.000   21.222    0.000 algorithms.py:412(unique_with_mask)
        1    0.002    0.002    0.008    0.008 api.py:104(<listcomp>)
        1    0.005    0.005    0.008    0.008 api.py:108(_get_distinct_objs)
        1    0.000    0.000    0.191    0.191 api.py:122(_get_combined_index)
        1    0.001    0.001    0.182    0.182 api.py:204(union_indexes)
        1    0.000    0.000    0.012    0.012 api.py:256(_find_common_index_dtype)
        1    0.012    0.012    0.012    0.012 api.py:268(<listcomp>)
     6533    0.004    0.000    0.158    0.000 api.py:316(<genexpr>)
        1    0.000    0.000    0.001    0.001 api.py:328(_sanitize_and_check)
        1    0.001    0.001    0.001    0.001 api.py:349(<setcomp>)
    49469    0.125    0.000    0.314    0.000 api.py:384(default_index)
        1    0.000    0.000    0.199    0.199 api.py:78(get_objs_combined_axis)
   293970    0.325    0.000    0.790    0.000 base.py:106(__eq__)
        1    0.000    0.000    0.000    0.000 base.py:1268(copy)
   587940    0.204    0.000    0.272    0.000 base.py:130(<genexpr>)
   391980    0.712    0.000    1.156    0.000 base.py:135(__hash__)
   783960    0.248    0.000    0.325    0.000 base.py:138(<genexpr>)
     6533    0.002    0.000    0.002    0.000 base.py:148(is_consolidated)
   367581    0.060    0.000    0.060    0.000 base.py:166(kind)
    75605    0.028    0.000    0.028    0.000 base.py:1734(name)
        1    0.000    0.000    0.000    0.000 base.py:1752(_validate_names)
     6535    0.003    0.000    0.004    0.000 base.py:1820(_get_names)
        1    0.000    0.000    0.000    0.000 base.py:1823(_set_names)
        1    0.000    0.000    0.000    0.000 base.py:1852(set_names)
        1    0.000    0.000    0.000    0.000 base.py:1963(rename)
 12845921   12.503    0.000   14.670    0.000 base.py:229(construct_from_string)
    49469    1.327    0.000    2.008    0.000 base.py:2381(is_unique)
   177362    0.055    0.000    0.055    0.000 base.py:241(disallow_kwargs)
    98938    0.153    0.000    2.908    0.000 base.py:2421(is_boolean)
    40954    0.069    0.000    2.691    0.000 base.py:2745(inferred_type)
   164268    0.476    0.000    1.283    0.000 base.py:2752(_is_all_dates)
   177334    0.076    0.000    0.436    0.000 base.py:2783(_is_multi)
  2259803    2.333    0.000   11.238    0.000 base.py:286(is_dtype)
   309880    0.053    0.000    0.053    0.000 base.py:324(ndim)
    97995    0.018    0.000    0.018    0.000 base.py:340(_is_boolean)
    58797    0.066    0.000    0.389    0.000 base.py:356(size)
    97995    0.016    0.000    0.016    0.000 base.py:386(_can_hold_na)
    49469    0.518    0.000   55.804    0.001 base.py:3888(get_indexer)
    49469    0.205    0.000    7.600    0.000 base.py:3975(_get_indexer)
    49469    0.156    0.000    0.996    0.000 base.py:4020(_check_indexing_method)
   195990    0.040    0.000    0.040    0.000 base.py:406(__str__)
   293970    0.272    0.000    1.109    0.000 base.py:409(__eq__)
    20477    0.019    0.000    0.019    0.000 base.py:413(_engine_type)
   391980    0.393    0.000    1.549    0.000 base.py:414(__hash__)
    58797    0.184    0.000    1.349    0.000 base.py:428(to_numpy)
255758/177362    3.721    0.000   62.468    0.000 base.py:430(__new__)
     6533    0.009    0.000    0.022    0.000 base.py:46(__len__)
  1382936   17.325    0.000   49.278    0.000 base.py:494(find)
   701471    0.187    0.000    0.187    0.000 base.py:5090(_values)
    98938    0.139    0.000    0.457    0.000 base.py:5116(_get_engine_target)
        1    0.001    0.001    0.018    0.018 base.py:5377(append)
    13067    0.049    0.000    0.117    0.000 base.py:54(shape)
        1    0.001    0.001    0.003    0.003 base.py:5402(<setcomp>)
    58797    0.052    0.000    0.442    0.000 base.py:543(empty)
    69067    0.345    0.000    1.386    0.000 base.py:5464(equals)
    13066    0.020    0.000    0.021    0.000 base.py:555(<genexpr>)
     6533    0.021    0.000    0.285    0.000 base.py:5551(identical)
    13066    0.010    0.000    0.021    0.000 base.py:5564(<genexpr>)
    39201    0.019    0.000    0.068    0.000 base.py:56(<genexpr>)
   119378    0.065    0.000    0.065    0.000 base.py:574(_ensure_array)
   335069    0.374    0.000    1.032    0.000 base.py:58(_validate_set_axis)
   177362    0.600    0.000    2.176    0.000 base.py:588(_dtype_to_subclass)
    49469    0.037    0.000    0.037    0.000 base.py:6193(_index_as_unique)
    49469    0.124    0.000    0.432    0.000 base.py:6205(_maybe_promote)
    49469    0.150    0.000    3.865    0.000 base.py:6285(_should_compare)
    49469    0.072    0.000    0.434    0.000 base.py:6303(_is_comparable_dtype)
    49469    0.034    0.000   40.547    0.001 base.py:6576(_maybe_cast_listlike_indexer)
   285601    0.758    0.000    1.151    0.000 base.py:690(_simple_new)
   177334    1.827    0.000   72.202    0.000 base.py:708(_with_infer)
   588005    0.729    0.000   73.418    0.000 base.py:7277(ensure_index)
   705599    0.819    0.000    2.860    0.000 base.py:7372(maybe_extract_name)
   177334    1.106    0.000   44.186    0.000 base.py:7396(_maybe_cast_data_without_dtype)
     6533    0.034    0.000    0.061    0.000 base.py:742(__iter__)
        1    0.002    0.002    0.010    0.010 base.py:7437(get_unanimous_names)
        1    0.003    0.003    0.008    0.008 base.py:7450(<listcomp>)
        1    0.000    0.000    0.000    0.000 base.py:7451(<listcomp>)
        2    0.000    0.000    0.000    0.000 base.py:7452(<genexpr>)
    49469    0.052    0.000    0.373    0.000 base.py:7456(unpack_nested_dtype)
    49469    0.529    0.000   68.958    0.001 base.py:796(_map_values)
        1    0.000    0.000    0.000    0.000 base.py:821(_view)
        1    0.000    0.000    0.000    0.000 base.py:830(_rename)
    69067    0.069    0.000    0.090    0.000 base.py:839(is_)
   341605    0.214    0.000    0.214    0.000 base.py:870(_reset_identity)
    49469    0.375    0.000    0.681    0.000 base.py:881(_engine)
   826054    0.370    0.000    0.514    0.000 base.py:925(__len__)
   177362    0.079    0.000    0.079    0.000 base.py:986(dtype)
        1    0.000    0.000    0.000    0.000 base_parser.py:1056(_make_date_converter)
    58797    0.746    0.000  203.026    0.003 base_parser.py:1059(converter)
     6533    1.486    0.000  204.652    0.031 base_parser.py:1148(_process_date_conversion)
    58797    0.048    0.000    0.064    0.000 base_parser.py:1157(_isindex)
    13066    0.064    0.000    0.111    0.000 base_parser.py:1283(_is_potential_multi_index)
    26132    0.028    0.000    0.030    0.000 base_parser.py:1308(<genexpr>)
        1    0.000    0.000    0.000    0.000 base_parser.py:1312(_validate_parse_dates_arg)
     6535    0.003    0.000    0.003    0.000 base_parser.py:1334(is_index_col)
        1    0.000    0.000    0.000    0.000 base_parser.py:165(_validate_parse_dates_presence)
       10    0.000    0.000    0.000    0.000 base_parser.py:197(<genexpr>)
        1    0.000    0.000    0.000    0.000 base_parser.py:209(<setcomp>)
        1    0.000    0.000    0.000    0.000 base_parser.py:221(<listcomp>)
        1    0.000    0.000    0.000    0.000 base_parser.py:229(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 base_parser.py:258(_extract_multi_indexer_columns)
     6533    0.186    0.000    0.255    0.000 base_parser.py:327(_maybe_dedup_names)
     6533    0.009    0.000    0.051    0.000 base_parser.py:358(_maybe_make_multi_index_columns)
     6533    0.021    0.000    0.076    0.000 base_parser.py:370(_make_index)
        1    0.000    0.000    0.000    0.000 base_parser.py:612(_set_noconvert_dtype_columns)
        9    0.000    0.000    0.000    0.000 base_parser.py:647(_set)
     6533    0.027    0.000  204.679    0.031 base_parser.py:814(_do_date_conversions)
     6533    0.009    0.000    0.011    0.000 base_parser.py:834(_check_data_length)
        1    0.000    0.000    0.000    0.000 base_parser.py:88(__init__)
        1    0.000    0.000    0.000    0.000 base_parser.py:924(_validate_usecols_arg)
   179725    0.349    0.000    1.086    0.000 blocks.py:160(_consolidate_key)
       15    0.000    0.000    0.000    0.000 blocks.py:1641(shape)
   124127    0.157    0.000    0.264    0.000 blocks.py:165(_can_hold_na)
   104378    0.104    0.000    0.657    0.000 blocks.py:188(is_bool)
    13066    0.021    0.000    0.021    0.000 blocks.py:1912(get_values)
        2    0.000    0.000    0.000    0.000 blocks.py:1939(is_extension)
     6554    0.005    0.000    0.081    0.000 blocks.py:200(fill_value)
   246420    0.475    0.000    1.386    0.000 blocks.py:2091(maybe_coerce_values)
   426145    0.902    0.000    1.186    0.000 blocks.py:2120(get_block_type)
   457478    0.098    0.000    0.098    0.000 blocks.py:213(mgr_locs)
    26150    0.083    0.000    0.915    0.000 blocks.py:2161(new_block_2d)
   220270    1.208    0.000    3.442    0.000 blocks.py:2172(new_block)
   220270    0.457    0.000    0.932    0.000 blocks.py:2186(check_ndim)
    39198    0.157    0.000    0.210    0.000 blocks.py:2250(extend_blocks)
       15    0.000    0.000    0.000    0.000 blocks.py:2266(ensure_block_shape)
       15    0.000    0.000    0.000    0.000 blocks.py:236(make_block_same_class)
   304795    0.178    0.000    0.231    0.000 blocks.py:500(dtype)
     6533    0.020    0.000    0.020    0.000 blocks.py:544(copy)
       18    0.000    0.000    0.000    0.000 blocks.py:823(shape)
        3    0.000    0.000    0.000    0.000 c_parser_wrapper.py:190(close)
        1    0.000    0.000    0.000    0.000 c_parser_wrapper.py:197(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 c_parser_wrapper.py:208(<dictcomp>)
        1    0.000    0.000    0.000    0.000 c_parser_wrapper.py:209(<listcomp>)
     6534    0.160    0.000  644.194    0.099 c_parser_wrapper.py:218(read)
     6533    0.025    0.000    0.025    0.000 c_parser_wrapper.py:314(<listcomp>)
     6533    0.048    0.000    0.048    0.000 c_parser_wrapper.py:318(<dictcomp>)
     6533    6.427    0.001   45.072    0.007 c_parser_wrapper.py:351(_concatenate_chunks)
   261320    0.278    0.000    0.375    0.000 c_parser_wrapper.py:363(<listcomp>)
   261320    0.387    0.000    1.063    0.000 c_parser_wrapper.py:365(<setcomp>)
   261320    0.286    0.000    1.980    0.000 c_parser_wrapper.py:367(<setcomp>)
        1    0.000    0.000    0.001    0.001 c_parser_wrapper.py:416(ensure_dtype_objs)
        1    0.000    0.000    0.001    0.001 c_parser_wrapper.py:431(<dictcomp>)
        1    0.002    0.002    0.003    0.003 c_parser_wrapper.py:49(__init__)
    95306    0.493    0.000    5.461    0.000 cast.py:1178(maybe_infer_to_datetimelike)
   124031    0.104    0.000    0.104    0.000 cast.py:1422(sanitize_to_nanoseconds)
       19    0.015    0.001    0.033    0.002 cast.py:1589(find_common_type)
       22    0.000    0.000    0.000    0.000 cast.py:1619(<genexpr>)
       17    0.000    0.000    0.000    0.000 cast.py:1628(<genexpr>)
       14    0.000    0.000    0.000    0.000 cast.py:1630(<genexpr>)
       22    0.000    0.000    0.000    0.000 cast.py:1635(<genexpr>)
    78396    0.577    0.000    0.933    0.000 cast.py:1763(construct_1d_object_array_from_listlike)
   164204    0.135    0.000    0.158    0.000 cast.py:508(ensure_dtype_can_hold_na)
   249014    0.270    0.000    2.141    0.000 cast.py:527(maybe_promote)
        3    0.000    0.000    0.000    0.000 cast.py:566(_maybe_promote_cached)
   164205    0.410    0.000    1.871    0.000 cast.py:574(_maybe_promote)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
    85109    0.238    0.000    3.835    0.000 codecs.py:319(decode)
    85109    0.063    0.000    0.063    0.000 codecs.py:331(getstate)
        1    0.000    0.000    0.000    0.000 common.py:1102(_maybe_memory_map)
        2    0.000    0.000    0.000    0.000 common.py:112(close)
        2    0.000    0.000    0.000    0.000 common.py:1147(_is_binary_mode)
   515005    0.542    0.000    0.783    0.000 common.py:1154(needs_i8_conversion)
    13069    0.017    0.000    0.021    0.000 common.py:116(ensure_python_int)
        1    0.000    0.000    0.000    0.000 common.py:1168(_get_binary_io_classes)
    78461    0.119    0.000    0.362    0.000 common.py:1204(is_numeric_dtype)
   679737    1.007    0.000    2.731    0.000 common.py:1246(is_float_dtype)
   379171    0.671    0.000    2.205    0.000 common.py:1278(is_bool_dtype)
        1    0.000    0.000    0.000    0.000 common.py:136(is_url)
    82101    0.266    0.000    0.642    0.000 common.py:1403(is_1d_only_ea_obj)
   697344    0.326    0.000    0.476    0.000 common.py:1420(is_1d_only_ea_dtype)
   875840    1.180    0.000    2.094    0.000 common.py:1433(is_extension_array_dtype)
  1449806    0.708    0.000    0.708    0.000 common.py:146(classes)
  1449806    0.541    0.000    0.831    0.000 common.py:148(<lambda>)
   511516    0.458    0.000    0.665    0.000 common.py:1487(is_ea_or_datetimelike_dtype)
   624610    0.273    0.000    0.273    0.000 common.py:151(classes_and_not_datetimelike)
    78391    0.070    0.000    0.168    0.000 common.py:1532(_is_dtype)
  1215572    0.787    0.000    1.532    0.000 common.py:1556(get_dtype)
   624610    0.387    0.000    0.536    0.000 common.py:156(<lambda>)
  2074416    2.162    0.000    4.440    0.000 common.py:1591(_is_dtype_type)
   603006    0.668    0.000    1.916    0.000 common.py:162(is_object_dtype)
        3    0.000    0.000    0.000    0.000 common.py:164(_expand_user)
   404139    0.527    0.000    1.586    0.000 common.py:1725(validate_all_hashable)
   808278    0.379    0.000    0.726    0.000 common.py:1744(<genexpr>)
  2039624    6.480    0.000   57.658    0.000 common.py:1751(pandas_dtype)
        1    0.000    0.000    0.000    0.000 common.py:178(not_none)
     6534    0.001    0.000    0.001    0.000 common.py:182(<genexpr>)
        1    0.000    0.000    0.000    0.000 common.py:183(validate_header_arg)
     6534    0.018    0.000    0.028    0.000 common.py:192(all_none)
    78391    0.224    0.000    0.427    0.000 common.py:192(is_sparse)
    13068    0.006    0.000    0.006    0.000 common.py:196(<genexpr>)
        2    0.000    0.000    0.000    0.000 common.py:224(stringify_path)
   255758    1.604    0.000    5.336    0.000 common.py:235(asarray_tuplesafe)
        1    0.000    0.000    0.000    0.000 common.py:268(is_fsspec_url)
        1    0.000    0.000    0.000    0.000 common.py:280(_get_filepath_or_buffer)
    65330    0.118    0.000    0.360    0.000 common.py:303(maybe_iterable_to_list)
   334079    0.451    0.000    1.487    0.000 common.py:319(is_datetime64_dtype)
   137188    0.169    0.000    0.876    0.000 common.py:352(is_datetime64tz_dtype)
   186664    0.142    0.000    0.175    0.000 common.py:393(is_timedelta64_dtype)
  1499151    1.747    0.000   11.953    0.000 common.py:427(is_period_dtype)
    49469    0.075    0.000    0.478    0.000 common.py:463(is_interval_dtype)
        1    0.000    0.000    0.000    0.000 common.py:494(get_compression_method)
   769985    0.800    0.000    3.750    0.000 common.py:501(is_categorical_dtype)
        1    0.000    0.000    0.000    0.000 common.py:529(infer_compression)
   262796    0.137    0.000    0.137    0.000 common.py:537(is_string_or_object_np_dtype)
    78391    0.090    0.000    0.258    0.000 common.py:544(is_string_dtype)
   432121    0.313    0.000    0.913    0.000 common.py:566(require_length_match)
    78391    0.047    0.000    0.047    0.000 common.py:573(condition)
   339820    0.500    0.000    1.733    0.000 common.py:585(is_dtype_equal)
        1    0.000    0.000    0.001    0.001 common.py:645(get_handle)
   307393    0.425    0.000    1.287    0.000 common.py:684(is_integer_dtype)
   119378    0.127    0.000    0.333    0.000 common.py:736(is_signed_integer_dtype)
   119378    0.141    0.000    0.373    0.000 common.py:790(is_unsigned_integer_dtype)
    78370    0.145    0.000    0.215    0.000 common.py:929(is_datetime64_ns_dtype)
       33    0.053    0.002    0.128    0.004 concat.py:103(<listcomp>)
       33    0.110    0.003    0.822    0.025 concat.py:108(<setcomp>)
       33    0.058    0.002    0.085    0.003 concat.py:109(<setcomp>)
       74    0.000    0.000    0.000    0.000 concat.py:110(<genexpr>)
   182952    0.072    0.000    0.276    0.000 concat.py:113(<genexpr>)
       33    0.099    0.003    0.757    0.023 concat.py:116(<setcomp>)
   117642    0.038    0.000    0.055    0.000 concat.py:117(<genexpr>)
        1    0.001    0.001 1240.630 1240.630 concat.py:146(concat)
        1    3.401    3.401  510.938  510.938 concat.py:176(concatenate_managers)
        1    0.010    0.010    3.131    3.131 concat.py:199(<listcomp>)
       15    0.042    0.003    0.042    0.003 concat.py:217(<listcomp>)
        1    0.003    0.003    0.004    0.004 concat.py:246(_maybe_reindex_columns_na_proxy)
     6533    2.064    0.000    3.121    0.000 concat.py:278(_get_mgr_concatenation_plan)
        3    0.000    0.000    3.396    1.132 concat.py:331(_concatenate_2d)
        3    0.009    0.003    0.063    0.021 concat.py:334(<listcomp>)
        5    1.916    0.383  232.852   46.570 concat.py:338(_concat_datetime)
        5    0.007    0.001    0.020    0.004 concat.py:354(<listcomp>)
   215589    0.141    0.000    0.141    0.000 concat.py:354(__init__)
        5    0.008    0.002    0.013    0.003 concat.py:356(<setcomp>)
        3    0.033    0.011  226.082   75.361 concat.py:362(<listcomp>)
   117594    0.945    0.000    1.812    0.000 concat.py:366(needs_filling)
   117594    0.277    0.000    2.099    0.000 concat.py:375(dtype)
   104528    0.124    0.000    0.129    0.000 concat.py:385(_is_valid_na_for)
        1    0.020    0.020  729.337  729.337 concat.py:389(__init__)
   215589    1.770    0.000  189.009    0.001 concat.py:415(is_na)
   270464    0.428    0.000  150.712    0.001 concat.py:442(<genexpr>)
   117594    0.621    0.000   27.292    0.000 concat.py:444(get_reindexed_values)
        1    0.004    0.004    0.050    0.050 concat.py:476(<listcomp>)
       18    0.002    0.000  419.111   23.284 concat.py:527(_concatenate_join_units)
   117612    0.101    0.000    0.101    0.000 concat.py:539(<genexpr>)
       18    0.193    0.011   27.484    1.527 concat.py:542(<listcomp>)
   117612    0.052    0.000    0.105    0.000 concat.py:559(<genexpr>)
        1    0.173    0.173  511.292  511.292 concat.py:565(get_result)
       18    0.000    0.000    0.000    0.000 concat.py:582(_dtype_to_na_value)
       18    0.000    0.000  145.479    8.082 concat.py:605(_get_empty_dtype)
   117612    0.094    0.000    0.100    0.000 concat.py:623(<genexpr>)
       18    0.421    0.023  145.335    8.074 concat.py:625(<listcomp>)
        1    0.000    0.000    0.000    0.000 concat.py:625(_get_result_dim)
        1    0.000    0.000    0.225    0.225 concat.py:631(_get_new_axes)
        1    0.000    0.000    0.225    0.225 concat.py:633(<listcomp>)
       33    0.001    0.000   48.375    1.466 concat.py:635(_is_uniform_join_units)
        1    0.000    0.000    0.199    0.199 concat.py:638(_get_comb_axis)
   172526    0.093    0.000    0.093    0.000 concat.py:647(<genexpr>)
        1    0.000    0.000    0.025    0.025 concat.py:648(_get_concat_axis)
   163350    0.325    0.000    1.502    0.000 concat.py:650(<genexpr>)
   136751    0.467    0.000   46.658    0.000 concat.py:660(<genexpr>)
    98020    0.038    0.000    0.038    0.000 concat.py:663(<genexpr>)
       18    0.000    0.000    0.000    0.000 concat.py:670(_is_uniform_reindex)
       36    0.000    0.000    0.000    0.000 concat.py:673(<genexpr>)
    35864    0.187    0.000    0.267    0.000 concat.py:678(_trim_join_unit)
        1    0.002    0.002    0.007    0.007 concat.py:682(<listcomp>)
        1    0.000    0.000    0.000    0.000 concat.py:701(_maybe_check_integrity)
       34    0.923    0.027    1.347    0.040 concat.py:705(_combine_concat_plans)
        1    0.000    0.000    0.018    0.018 concat.py:708(_concat_indexes)
       33    0.013    0.000  281.442    8.529 concat.py:71(concat_compat)
   186258    0.051    0.000    0.140    0.000 concat.py:731(_next_or_none)
   215589    0.076    0.000    0.076    0.000 concat.py:92(is_nonempty)
   226818    0.574    0.000    1.619    0.000 config.py:116(_get_single_key)
   226818    0.358    0.000    2.687    0.000 config.py:134(_get_option)
   226818    0.255    0.000    2.942    0.000 config.py:262(__call__)
   226818    0.196    0.000    0.196    0.000 config.py:579(_select_options)
   226818    0.551    0.000    0.711    0.000 config.py:597(_get_root)
   453636    0.489    0.000    0.489    0.000 config.py:611(_get_deprecated_option)
   226818    0.118    0.000    0.232    0.000 config.py:638(_translate_key)
   226818    0.173    0.000    0.548    0.000 config.py:650(_warn_if_deprecated)
     6533    1.369    0.000   40.351    0.006 construction.py:100(arrays_to_mgr)
     6533    0.010    0.000    0.011    0.000 construction.py:231(mgr_to_mgr)
  2570734    2.058    0.000   12.569    0.000 construction.py:399(extract_array)
     6533    0.224    0.000   78.446    0.012 construction.py:423(dict_to_mgr)
   449010    0.597    0.000    2.373    0.000 construction.py:461(ensure_wrapped_if_datetimelike)
     6533    0.180    0.000   28.265    0.004 construction.py:488(<listcomp>)
   560014    2.877    0.000   16.302    0.000 construction.py:493(sanitize_array)
     6533    0.505    0.000    5.743    0.001 construction.py:588(_homogenize)
   560014    0.559    0.000    1.129    0.000 construction.py:676(_sanitize_ndim)
   363091    0.235    0.000    0.294    0.000 construction.py:713(_sanitize_str_dtypes)
   560014    0.327    0.000    0.445    0.000 construction.py:733(_maybe_repeat)
   363091    0.858    0.000    7.943    0.000 construction.py:744(_try_cast)
   449868    0.463    0.000    1.612    0.000 construction.py:861(is_empty_data)
   114799    0.634    0.000   29.753    0.000 construction.py:881(create_series_with_explicit_dtype)
    35865    0.032    0.000    0.056    0.000 copy.py:66(copy)
    52215    0.048    0.000    0.100    0.000 datetimelike.py:2012(_reso)
    78391    0.189    0.000    0.827    0.000 datetimelike.py:2138(ensure_arraylike_for_datetimelike)
    78391    0.030    0.000    0.030    0.000 datetimelike.py:2206(validate_inferred_freq)
    78391    0.105    0.000    0.151    0.000 datetimelike.py:2243(maybe_infer_freq)
    19573    0.016    0.000    0.078    0.000 datetimelike.py:295(asi8)
    71856    0.067    0.000    0.312    0.000 datetimelike.py:330(__array__)
  1375030    5.169    0.000   44.331    0.000 datetimelike.py:347(__getitem__)
  1342388    3.647    0.000   18.466    0.000 datetimelike.py:368(_get_getitem_freq)
    19573    0.145    0.000  225.361    0.012 datetimelike.py:425(astype)
  1167796    1.356    0.000   65.961    0.000 datetimelike.py:525(view)
        2    0.000    0.000    1.426    0.713 datetimelike.py:533(_concat_same_type)
    49464    0.172    0.000    0.500    0.000 datetimelike.py:560(copy)
    82101    0.272    0.000    1.228    0.000 datetimelike.py:637(_validate_scalar)
  2510092    0.655    0.000    0.655    0.000 datetimelike.py:926(freq)
    58797    1.458    0.000    1.490    0.000 datetimes.py:134(should_cache)
    58797    1.064    0.000   85.111    0.001 datetimes.py:194(_maybe_cache)
   164202    0.039    0.000    0.039    0.000 datetimes.py:194(_scalar_type)
    78391    0.871    0.000    5.025    0.000 datetimes.py:1980(_sequence_to_dt64ns)
    58797    0.347    0.000   20.716    0.000 datetimes.py:2129(objects_to_datetime64ns)
   137188    0.436    0.000    3.067    0.000 datetimes.py:2215(maybe_convert_dtype)
    78391    0.030    0.000    0.030    0.000 datetimes.py:2314(_validate_dt64_dtype)
   156782    0.054    0.000    0.054    0.000 datetimes.py:2366(validate_tz_from_dtype)
   108266    0.342    0.000    7.251    0.000 datetimes.py:241(_box_as_indexlike)
    78391    0.376    0.000    0.556    0.000 datetimes.py:265(_simple_new)
    49469    0.410    0.000   87.887    0.002 datetimes.py:270(_convert_and_box_cache)
    19617    0.026    0.000    1.674    0.000 datetimes.py:286(_from_sequence)
    78391    0.430    0.000    6.365    0.000 datetimes.py:290(_from_sequence_not_strict)
   108238    0.386    0.000    6.088    0.000 datetimes.py:313(__new__)
    58797    0.470    0.000   29.275    0.000 datetimes.py:325(_convert_listlike_datetimes)
    82101    0.284    0.000    0.348    0.000 datetimes.py:449(_unbox_scalar)
    82101    0.027    0.000    0.027    0.000 datetimes.py:458(_check_compatible_with)
    32642    0.172    0.000    0.541    0.000 datetimes.py:483(_box_func)
  3842548    1.066    0.000    1.066    0.000 datetimes.py:495(dtype)
   182790    0.134    0.000    0.212    0.000 datetimes.py:520(tz)
    71856    0.204    0.000    0.616    0.000 datetimes.py:562(__array__)
   174592    0.185    0.000    2.932    0.000 datetimes.py:569(__iter__)
    19573    0.118    0.000  226.045    0.012 datetimes.py:599(astype)
    58797    0.805    0.000  191.773    0.003 datetimes.py:705(to_datetime)
    78391    0.174    0.000    0.174    0.000 datetimes.py:94(tz_to_dtype)
  1167811    1.265    0.000    1.749    0.000 dtype.py:125(construct_from_string)
  1167811    1.245    0.000    1.706    0.000 dtype.py:216(construct_from_string)
  1167811    2.233    0.000    3.376    0.000 dtypes.py:1185(construct_from_string)
    49469    0.097    0.000    0.389    0.000 dtypes.py:1247(is_dtype)
   452268    0.726    0.000    0.829    0.000 dtypes.py:1333(__init__)
  1167811    1.541    0.000    1.649    0.000 dtypes.py:303(construct_from_string)
  1167811    1.867    0.000    3.806    0.000 dtypes.py:754(construct_from_string)
  1167811    2.135    0.000    3.555    0.000 dtypes.py:913(construct_from_string)
  1499151    2.112    0.000    9.795    0.000 dtypes.py:977(is_dtype)
        2    0.000    0.000    0.000    0.000 enum.py:359(__call__)
        2    0.000    0.000    0.000    0.000 enum.py:678(__new__)
   177335    0.078    0.000    0.078    0.000 enum.py:801(value)
        1    0.000    0.000    0.000    0.000 enum.py:986(__and__)
   108238    0.075    0.000    0.177    0.000 extension.py:70(fget)
   348136    0.436    0.000    0.436    0.000 flags.py:49(__init__)
    69068    0.025    0.000    0.025    0.000 flags.py:53(allows_duplicate_labels)
    62536    0.090    0.000    0.090    0.000 flags.py:85(allows_duplicate_labels)
        1    0.000    0.000    0.000    0.000 frame.py:600(_constructor)
     6534    0.100    0.000   78.702    0.012 frame.py:609(__init__)
    13066    0.011    0.000    0.011    0.000 frame.py:857(axes)
     6533    0.014    0.000    0.045    0.000 frame.py:874(shape)
    26132    0.010    0.000    0.010    0.000 fromnumeric.py:1034(_argsort_dispatcher)
    26132    0.044    0.000    0.252    0.000 fromnumeric.py:1038(argsort)
    26132    0.043    0.000    0.208    0.000 fromnumeric.py:51(_wrapfunc)
        1    0.000    0.000    0.000    0.000 frozen.py:70(__getitem__)
     6533    0.005    0.000    0.005    0.000 function.py:56(__call__)
     6533    0.054    0.000    0.751    0.000 generic.py:11108(_logical_func)
     6533    0.019    0.000    0.771    0.000 generic.py:11166(any)
     6533    0.012    0.000    0.782    0.000 generic.py:11598(any)
   348136    1.242    0.000    1.677    0.000 generic.py:259(__init__)
    69068    0.042    0.000    0.042    0.000 generic.py:332(attrs)
   131604    0.034    0.000    0.034    0.000 generic.py:353(flags)
 17484126    7.139    0.000    9.276    0.000 generic.py:40(_check)
   130660    0.178    0.000    0.787    0.000 generic.py:445(_validate_dtype)
 17484126    7.023    0.000   16.365    0.000 generic.py:45(_instancecheck)
     6533    0.076    0.000    1.016    0.000 generic.py:5044(reindex)
     6533    0.024    0.000    0.035    0.000 generic.py:518(_construct_axes_from_arguments)
    13066    0.022    0.000    0.332    0.000 generic.py:5277(<genexpr>)
     6533    0.008    0.000    0.011    0.000 generic.py:547(<dictcomp>)
    19602    0.016    0.000    0.016    0.000 generic.py:550(_get_axis_number)
    13066    0.020    0.000    0.031    0.000 generic.py:564(_get_axis)
        2    0.000    0.000    0.000    0.000 generic.py:570(_get_block_manager_axis)
    62536    0.489    0.000    1.065    0.000 generic.py:5844(__finalize__)
     6533    0.002    0.000    0.009    0.000 generic.py:5876(<genexpr>)
     6534    0.003    0.000    0.008    0.000 generic.py:5881(<genexpr>)
   341602    0.519    0.000    0.519    0.000 generic.py:5888(__getattr__)
   348135    1.166    0.000    4.852    0.000 generic.py:5904(__setattr__)
     6533    0.018    0.000    0.062    0.000 generic.py:5959(_protect_consolidate)
     6533    0.012    0.000    0.074    0.000 generic.py:5973(_consolidate_inplace)
     6533    0.015    0.000    0.038    0.000 generic.py:5977(f)
     6533    0.039    0.000    0.476    0.000 generic.py:6258(copy)
     6535    0.012    0.000    0.012    0.000 generic.py:664(ndim)
     6533    0.015    0.000    1.066    0.000 generic.py:7765(isna)
        2    0.000    0.000    0.000    0.000 inference.py:102(is_file_like)
   131570    0.103    0.000    0.207    0.000 inference.py:188(is_array_like)
   229596    0.528    0.000    1.233    0.000 inference.py:266(is_dict_like)
   803587    0.321    0.000    0.469    0.000 inference.py:292(<genexpr>)
  2362437    1.342    0.000    2.030    0.000 inference.py:325(is_hashable)
   104378    0.324    0.000    0.553    0.000 inference.py:430(is_inferred_bool_dtype)
    57984    0.057    0.000    0.107    0.000 inspect.py:1672(currentframe)
  1188672    0.405    0.000    0.559    0.000 inspect.py:182(ismodule)
  1188672    0.329    0.000    0.456    0.000 inspect.py:191(isclass)
  1188672    0.367    0.000    0.493    0.000 inspect.py:199(ismethod)
  1188672    0.373    0.000    0.498    0.000 inspect.py:277(isfunction)
  1188672    0.358    0.000    0.481    0.000 inspect.py:355(istraceback)
  1188672    0.358    0.000    0.468    0.000 inspect.py:365(isframe)
  1188672    0.379    0.000    0.483    0.000 inspect.py:379(iscode)
  1188672    2.569    0.000    6.006    0.000 inspect.py:773(getfile)
        1    0.000    0.000    0.000    0.000 managers.py:1040(_verify_integrity)
       34    0.000    0.000    0.000    0.000 managers.py:1042(<genexpr>)
     6533    0.004    0.000    0.004    0.000 managers.py:172(blknos)
     6533    0.012    0.000    0.224    0.000 managers.py:1846(is_consolidated)
     6533    0.055    0.000    0.212    0.000 managers.py:1854(_consolidate_check)
     6533    0.119    0.000    0.153    0.000 managers.py:1860(<listcomp>)
     6533    0.045    0.000   22.487    0.003 managers.py:1864(_consolidate_inplace)
     6533    0.003    0.000    0.003    0.000 managers.py:188(blklocs)
     6533    0.003    0.000    0.003    0.000 managers.py:1882(ndim)
   226803    0.441    0.000    0.539    0.000 managers.py:1891(__init__)
     6533    0.020    0.000    0.038    0.000 managers.py:1917(from_blocks)
   220270    0.571    0.000    4.832    0.000 managers.py:1934(from_array)
   170801    0.093    0.000    0.093    0.000 managers.py:2009(_block)
   148407    0.336    0.000    0.465    0.000 managers.py:2058(dtype)
   239869    0.481    0.000    0.550    0.000 managers.py:2069(internal_values)
     6533    0.071    0.000   33.219    0.005 managers.py:2182(create_block_manager_from_column_arrays)
   261320    0.348    0.000    0.675    0.000 managers.py:2237(_grouping_func)
     6533    1.192    0.000   10.657    0.002 managers.py:2253(_form_blocks)
   335069    0.338    0.000    1.370    0.000 managers.py:228(set_axis)
    97995    0.187    0.000    0.485    0.000 managers.py:2280(<listcomp>)
    81730    4.525    0.000    5.727    0.000 managers.py:2305(_stack_arrays)
     6533    0.175    0.000   21.911    0.003 managers.py:2319(_consolidate)
   359450    0.264    0.000    1.350    0.000 managers.py:2324(<lambda>)
     6533    0.005    0.000    0.006    0.000 managers.py:233(is_single_block)
    32665   10.633    0.000   20.105    0.001 managers.py:2361(_merge_blocks)
    26132    0.059    0.000    0.080    0.000 managers.py:2372(<listcomp>)
     6534    0.004    0.000    0.004    0.000 managers.py:238(items)
    26132    0.027    0.000    0.027    0.000 managers.py:2381(<listcomp>)
   226803    0.098    0.000    0.098    0.000 managers.py:2433(_using_copy_on_write)
     6533    0.055    0.000    0.146    0.000 managers.py:301(apply)
     6533    0.003    0.000    0.003    0.000 managers.py:330(<dictcomp>)
     6533    0.040    0.000    0.197    0.000 managers.py:616(copy)
     6533    0.008    0.000    0.008    0.000 managers.py:655(<listcomp>)
     6533    0.013    0.000    0.015    0.000 managers.py:673(consolidate)
     6534    0.005    0.000    0.005    0.000 managers.py:997(__init__)
    56002    0.022    0.000    0.022    0.000 missing.py:107(clean_fill_method)
   711754    0.367    0.000    9.915    0.000 missing.py:108(isna)
   711754    0.973    0.000    9.548    0.000 missing.py:191(_isna)
519059/262796    0.919    0.000    8.811    0.000 missing.py:268(_isna_array)
   262796    0.416    0.000    6.086    0.000 missing.py:309(_isna_string_dtype)
    69067    0.162    0.000    0.368    0.000 missing.py:460(array_equivalent)
    19598    0.073    0.000    0.179    0.000 missing.py:564(_array_equivalent_object)
   337671    0.748    0.000    1.994    0.000 missing.py:645(na_value_for_dtype)
   246456    0.531    0.000    1.322    0.000 missing.py:699(is_valid_na_for_dtype)
   279742    1.523    0.000  181.002    0.001 missing.py:750(isna_all)
  1167796   17.809    0.000   84.079    0.000 missing.py:772(<lambda>)
   256263    0.172    0.000    8.831    0.000 missing.py:777(<lambda>)
  2063319    8.087    0.000  177.830    0.000 missing.py:781(<genexpr>)
    56002    0.046    0.000    0.068    0.000 missing.py:910(clean_reindex_fill_method)
   296684    0.113    0.000    0.113    0.000 multiarray.py:1079(copyto)
    45636    0.025    0.000    0.025    0.000 multiarray.py:1130(putmask)
   313617    0.087    0.000    0.087    0.000 multiarray.py:152(concatenate)
     6533    0.003    0.000    0.003    0.000 nanops.py:195(_get_fill_value)
     6533    0.009    0.000    0.041    0.000 nanops.py:217(_maybe_get_mask)
     6533    0.056    0.000    0.216    0.000 nanops.py:261(_get_values)
     6533    0.009    0.000    0.015    0.000 nanops.py:350(_na_ok_dtype)
     6533    0.024    0.000    0.387    0.000 nanops.py:496(nanany)
    57984    0.065    0.000    0.065    0.000 numeric.py:115(inferred_type)
    57984    0.248    0.000    0.925    0.000 numeric.py:132(_ensure_array)
    64518    0.069    0.000    0.276    0.000 numeric.py:181(_validate_dtype)
    57984    0.079    0.000    0.173    0.000 numeric.py:192(_ensure_dtype)
   296684    0.886    0.000    3.719    0.000 numeric.py:290(full)
    28992    0.021    0.000    0.021    0.000 numeric.py:418(_engine_type)
   130158    0.093    0.000    0.130    0.000 numerictypes.py:282(issubclass_)
    65079    0.098    0.000    0.235    0.000 numerictypes.py:356(issubdtype)
       14    0.000    0.000    0.001    0.000 numerictypes.py:573(_can_coerce_all)
      133    0.000    0.000    0.000    0.000 numerictypes.py:582(<listcomp>)
        7    0.000    0.000    0.001    0.000 numerictypes.py:597(find_common_type)
        7    0.000    0.000    0.000    0.000 numerictypes.py:649(<listcomp>)
        7    0.000    0.000    0.000    0.000 numerictypes.py:650(<listcomp>)
   452268    0.547    0.000   85.201    0.000 numpy_.py:112(_from_backing_data)
  1211859    0.332    0.000    0.332    0.000 numpy_.py:118(dtype)
    97995    0.061    0.000    0.085    0.000 numpy_.py:125(__array__)
   256263    0.155    0.000    8.025    0.000 numpy_.py:183(isna)
   452268    1.426    0.000    3.250    0.000 numpy_.py:69(__init__)
        1    0.000    0.000    0.000    0.000 os.py:1079(__subclasshook__)
        2    0.000    0.000    0.000    0.000 parse.py:103(_noop)
        2    0.000    0.000    0.000    0.000 parse.py:114(_coerce_args)
        1    0.000    0.000    0.000    0.000 parse.py:372(urlparse)
        1    0.000    0.000    0.000    0.000 parse.py:419(_checknetloc)
        1    0.000    0.000    0.000    0.000 parse.py:437(urlsplit)
    57984    0.289    0.000    0.465    0.000 posixpath.py:150(dirname)
        3    0.000    0.000    0.000    0.000 posixpath.py:228(expanduser)
   115968    0.056    0.000    0.087    0.000 posixpath.py:41(_get_sep)
    57984    0.238    0.000    0.350    0.000 posixpath.py:71(join)
        1    0.001    0.001 1255.949 1255.949 prof.py:14(load_pandas)
     6534    0.055    0.000    0.167    0.000 range.py:118(__new__)
    56004    0.145    0.000    0.214    0.000 range.py:173(_simple_new)
    98938    0.126    0.000    0.126    0.000 range.py:353(dtype)
        1    0.000    0.000    0.000    0.000 range.py:453(_view)
        1    0.004    0.004    0.013    0.013 range.py:887(_concat)
     6534    0.002    0.000    0.002    0.000 range.py:896(<genexpr>)
        1    0.002    0.002    0.006    0.006 range.py:907(<listcomp>)
   633736    0.255    0.000    0.366    0.000 range.py:946(__len__)
   177334    0.109    0.000    0.809    0.000 re.py:249(compile)
   177334    0.413    0.000    0.700    0.000 re.py:288(_compile)
        1    0.000    0.000    0.004    0.004 readers.py:1395(__init__)
        2    0.000    0.000    0.000    0.000 readers.py:1444(close)
        1    0.000    0.000    0.000    0.000 readers.py:1449(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 readers.py:1516(_check_file_or_buffer)
        1    0.000    0.000    0.000    0.000 readers.py:1527(_clean_options)
     6534    0.012    0.000  729.002    0.112 readers.py:1696(__next__)
        1    0.000    0.000    0.004    0.004 readers.py:1703(_make_engine)
     6534    2.310    0.000  725.440    0.111 readers.py:1762(read)
     6534    3.550    0.001  728.990    0.112 readers.py:1803(get_chunk)
        1    0.000    0.000    0.000    0.000 readers.py:1879(_clean_na_values)
        1    0.000    0.000    0.000    0.000 readers.py:1954(_refine_defaults_read)
        1    0.000    0.000    0.000    0.000 readers.py:2132(_extract_dialect)
        1    0.000    0.000    0.000    0.000 readers.py:2230(_validate_skipfooter)
     6535    0.050    0.000    0.056    0.000 readers.py:517(validate_integer)
        1    0.000    0.000    0.000    0.000 readers.py:547(_validate_names)
        1    0.000    0.000    0.004    0.004 readers.py:571(_read)
        1    0.000    0.000    0.004    0.004 readers.py:854(read_csv)
     6533    0.002    0.000    0.002    0.000 series.py:1274(_clear_item_cache)
341602/269739    4.151    0.000   71.171    0.000 series.py:342(__init__)
    49469    0.498    0.000   75.686    0.002 series.py:4460(map)
     6533    0.076    0.000    0.681    0.000 series.py:4773(_reduce)
    65330    0.248    0.000   28.307    0.000 series.py:486(_init_dict)
     6533    0.045    0.000    1.066    0.000 series.py:5077(reindex)
    62535    0.022    0.000    0.022    0.000 series.py:546(_constructor)
   335069    0.864    0.000    3.753    0.000 series.py:565(_set_axis)
     6533    0.022    0.000    1.088    0.000 series.py:5707(isna)
   148407    0.099    0.000    0.564    0.000 series.py:596(dtype)
   460139    1.019    0.000    1.539    0.000 series.py:611(name)
   404137    0.901    0.000    2.487    0.000 series.py:661(name)
   239869    0.225    0.000    0.775    0.000 series.py:708(_values)
     6533    0.005    0.000    0.035    0.000 series.py:764(__len__)
    26132    0.017    0.000    0.027    0.000 shape_base.py:207(_arrays_for_stack_dispatcher)
    26132    0.018    0.000    0.045    0.000 shape_base.py:218(_vhstack_dispatcher)
    26132    0.092    0.000    7.251    0.000 shape_base.py:223(vstack)
    45731    0.008    0.000    0.008    0.000 shape_base.py:77(_atleast_2d_dispatcher)
    45731    0.129    0.000    0.574    0.000 shape_base.py:81(atleast_2d)
        1    0.000    0.000    0.000    0.000 six.py:194(find_spec)
        1    0.000    0.000    0.000    0.000 sre_compile.py:447(_simple)
        2    0.000    0.000    0.000    0.000 sre_compile.py:477(_get_iscased)
        1    0.000    0.000    0.000    0.000 sre_compile.py:485(_get_literal_prefix)
        1    0.000    0.000    0.000    0.000 sre_compile.py:516(_get_charset_prefix)
        1    0.000    0.000    0.000    0.000 sre_compile.py:560(_compile_info)
        2    0.000    0.000    0.000    0.000 sre_compile.py:619(isstring)
        1    0.000    0.000    0.000    0.000 sre_compile.py:622(_code)
        1    0.000    0.000    0.000    0.000 sre_compile.py:783(compile)
      2/1    0.000    0.000    0.000    0.000 sre_compile.py:87(_compile)
        2    0.000    0.000    0.000    0.000 sre_parse.py:112(__init__)
        4    0.000    0.000    0.000    0.000 sre_parse.py:161(__len__)
       29    0.000    0.000    0.000    0.000 sre_parse.py:165(__getitem__)
        1    0.000    0.000    0.000    0.000 sre_parse.py:169(__setitem__)
       22    0.000    0.000    0.000    0.000 sre_parse.py:173(append)
      2/1    0.000    0.000    0.000    0.000 sre_parse.py:175(getwidth)
        1    0.000    0.000    0.000    0.000 sre_parse.py:225(__init__)
       24    0.000    0.000    0.000    0.000 sre_parse.py:234(__next)
        2    0.000    0.000    0.000    0.000 sre_parse.py:250(match)
       23    0.000    0.000    0.000    0.000 sre_parse.py:255(get)
        2    0.000    0.000    0.000    0.000 sre_parse.py:287(tell)
        1    0.000    0.000    0.000    0.000 sre_parse.py:436(_parse_sub)
        1    0.000    0.000    0.000    0.000 sre_parse.py:494(_parse)
        1    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        2    0.000    0.000    0.000    0.000 sre_parse.py:82(groups)
        1    0.000    0.000    0.000    0.000 sre_parse.py:928(fix_flags)
        1    0.000    0.000    0.000    0.000 sre_parse.py:944(parse)
   550278    0.593    0.000    0.593    0.000 string_.py:101(__init__)
   171561    0.047    0.000    0.047    0.000 string_.py:114(type)
  1167811    1.131    0.000    1.239    0.000 string_.py:118(construct_from_string)
   195990    0.827    0.000    0.827    0.000 string_.py:162(construct_array_type)
   452268    2.582    0.000   84.654    0.000 string_.py:305(__init__)
   452268   34.918    0.000   76.164    0.000 string_.py:313(_validate)
    97995    0.784    0.000   38.462    0.000 string_.py:329(_from_sequence)
    97995    0.119    0.000   38.581    0.000 string_.py:355(_from_sequence_of_strings)
   166913    1.109    0.000   24.779    0.000 take.py:120(_take_nd_ndarray)
        6    0.000    0.000    0.000    0.000 take.py:288(_get_take_nd_function_cached)
   166913    0.386    0.000    0.386    0.000 take.py:326(_get_take_nd_function)
    82101    0.685    0.000    5.794    0.000 take.py:350(wrapper)
   166913    0.346    0.000    1.440    0.000 take.py:554(_take_preprocess_indexer_and_fill_value)
249014/166913    1.059    0.000   34.423    0.000 take.py:57(take_nd)
   177335    0.192    0.000    0.270    0.000 types.py:176(__get__)
        2    0.000    0.000    0.000    0.000 typing.py:1016(__init__)
        9    0.000    0.000    0.000    0.000 typing.py:1022(<genexpr>)
        1    0.000    0.000    0.000    0.000 typing.py:1138(__getitem__)
        2    0.000    0.000    0.000    0.000 typing.py:1143(<genexpr>)
        1    0.000    0.000    0.000    0.000 typing.py:1147(copy_with)
        1    0.000    0.000    0.000    0.000 typing.py:1154(__subclasscheck__)
        7    0.000    0.000    0.000    0.000 typing.py:137(_type_convert)
        7    0.000    0.000    0.000    0.000 typing.py:146(_type_check)
  3575119    0.546    0.000    0.546    0.000 typing.py:1737(cast)
        2    0.000    0.000    0.000    0.000 typing.py:206(_collect_type_vars)
        1    0.000    0.000    0.000    0.000 typing.py:223(_check_generic)
        1    0.000    0.000    0.000    0.000 typing.py:253(_deduplicate)
        1    0.000    0.000    0.000    0.000 typing.py:267(_remove_dups_flatten)
    58798    0.104    0.000    0.105    0.000 typing.py:306(inner)
        1    0.000    0.000    0.000    0.000 typing.py:401(__getitem__)
        1    0.000    0.000    0.000    0.000 typing.py:483(Union)
        7    0.000    0.000    0.000    0.000 typing.py:515(<genexpr>)
        1    0.000    0.000    0.000    0.000 typing.py:664(__init__)
        6    0.000    0.000    0.000    0.000 typing.py:705(__eq__)
        1    0.000    0.000    0.000    0.000 typing.py:714(__hash__)
       17    0.000    0.000    0.000    0.000 typing.py:935(_is_dunder)
        2    0.000    0.000    0.000    0.000 typing.py:947(__init__)
       17    0.000    0.000    0.000    0.000 typing.py:986(__setattr__)
        1    0.000    0.000    0.000    0.000 typing.py:993(__instancecheck__)
    82101    0.290    0.000    2.981    0.000 utils.py:191(validate_indices)
  2591855    6.966    0.000    9.196    0.000 utils.py:430(check_array_indexer)
   177334    0.885    0.000    2.791    0.000 warnings.py:130(filterwarnings)
   242692    0.378    0.000    1.404    0.000 warnings.py:165(simplefilter)
   420026    1.120    0.000    1.981    0.000 warnings.py:181(_add_filter)
   420026    0.563    0.000    0.563    0.000 warnings.py:437(__init__)
   420026    0.963    0.000    1.069    0.000 warnings.py:458(__enter__)
   420026    0.573    0.000    0.644    0.000 warnings.py:477(__exit__)
   439602    0.273    0.000    0.273    0.000 {built-in method __new__ of type object at 0x55649767b9a0}
  1192938    0.958    0.000    0.959    0.000 {built-in method _abc._abc_instancecheck}
    62/11    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.lookup_error}
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.lookup}
    85109    3.597    0.000    3.597    0.000 {built-in method _codecs.utf_8_decode}
    32642    0.090    0.000    0.090    0.000 {built-in method _from_value_and_reso}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
    78391    0.103    0.000    0.103    0.000 {built-in method _simple_new}
        1    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
       21    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
       19    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
  1260078    0.243    0.000    0.243    0.000 {built-in method _warnings._filters_mutated}
    57984    0.690    0.000    0.690    0.000 {built-in method _warnings.warn}
1311073/921256    1.952    0.000  191.284    0.000 {built-in method builtins.all}
      162    0.070    0.000    0.707    0.004 {built-in method builtins.any}
     6534    0.003    0.000    0.003    0.000 {built-in method builtins.callable}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
        1    0.000    0.000 1255.949 1255.949 {built-in method builtins.exec}
 23265520    3.246    0.000    3.323    0.000 {built-in method builtins.getattr}
  3044533    0.884    0.000    1.317    0.000 {built-in method builtins.hasattr}
  2362438    0.687    0.000    0.687    0.000 {built-in method builtins.hash}
   111061    0.032    0.000    0.032    0.000 {built-in method builtins.id}
102647193/102240253   23.467    0.000   41.176    0.000 {built-in method builtins.isinstance}
  4272710    0.816    0.000    0.816    0.000 {built-in method builtins.issubclass}
     6533    0.003    0.000    0.003    0.000 {built-in method builtins.iter}
7697400/6231075    2.281    0.000    2.919    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.locals}
   279775    0.244    0.000    0.244    0.000 {built-in method builtins.max}
       38    0.003    0.000    0.003    0.000 {built-in method builtins.min}
   192791    0.093    0.000    0.093    0.000 {built-in method builtins.next}
       22    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
    13067    0.140    0.000    1.427    0.000 {built-in method builtins.sorted}
     6534    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        7    0.006    0.001    0.006    0.001 {built-in method fromkeys}
        1    0.000    0.000    0.000    0.000 {built-in method io.open}
   235833    0.503    0.000    0.503    0.000 {built-in method numpy.array}
   101329    0.319    0.000    0.425    0.000 {built-in method numpy.asanyarray}
  2417362    1.906    0.000    2.415    0.000 {built-in method numpy.asarray}
753932/701668   47.511    0.000   48.538    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    26152    0.019    0.000    0.019    0.000 {built-in method numpy.datetime_data}
   623873    5.044    0.000    5.044    0.000 {built-in method numpy.empty}
    26132    0.013    0.000    0.013    0.000 {built-in method numpy.geterrobj}
    13066    0.023    0.000    0.023    0.000 {built-in method numpy.seterrobj}
    97995   37.327    0.000   37.327    0.000 {built-in method pandas._libs.lib.ensure_string_array}
    39294    0.202    0.000    0.202    0.000 {built-in method pandas._libs.lib.is_bool_array}
    85807    0.315    0.000    0.315    0.000 {built-in method pandas._libs.lib.is_datetime_array}
   452268   41.131    0.000   41.131    0.000 {built-in method pandas._libs.lib.is_string_array}
   448958    0.409    0.000    0.409    0.000 {built-in method pandas._libs.missing.checknull}
   262796    5.670    0.000    5.670    0.000 {built-in method pandas._libs.missing.isnaobj}
    58797   19.587    0.000   19.587    0.000 {built-in method pandas._libs.tslib.array_to_datetime}
    78391    0.031    0.000    0.031    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
   137188    0.076    0.000    0.076    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
   115971    0.029    0.000    0.029    0.000 {built-in method posix.fspath}
        5    0.000    0.000    0.000    0.000 {built-in method posix.stat}
    57984    0.030    0.000    0.030    0.000 {built-in method sys._getframe}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
   147459    4.564    0.000   28.338    0.000 {function DatetimeLikeArrayMixin.copy at 0x7f7ce0d1a170}
        1    0.000    0.000    0.000    0.000 {function FrozenList.__getitem__ at 0x7f7ce0b7a710}
        2    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
  1424491    1.283    0.000    1.283    0.000 {method '_from_backing_data' of 'pandas._libs.arrays.NDArrayBacked' objects}
     6533    0.239    0.000    0.307    0.000 {method '_rebuild_blknos_and_blklocs' of 'pandas._libs.internals.BlockManager' objects}
    13075    0.002    0.000    0.002    0.000 {method 'add' of 'set' objects}
  1783577    1.968    0.000   16.453    0.000 {method 'all' of 'numpy.ndarray' objects}
   137215    0.141    0.000    1.062    0.000 {method 'any' of 'numpy.ndarray' objects}
   774490    0.116    0.000    0.116    0.000 {method 'append' of 'list' objects}
    26132    0.151    0.000    0.151    0.000 {method 'argsort' of 'numpy.ndarray' objects}
   127919    0.123    0.000    0.123    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        3    0.000    0.000    0.000    0.000 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
   215593    0.671    0.000    0.671    0.000 {method 'copy' of 'dict' objects}
        5    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
  1225813    0.353    0.000    0.353    0.000 {method 'endswith' of 'str' objects}
   104528    0.029    0.000    0.029    0.000 {method 'extend' of 'list' objects}
      150    0.003    0.000    0.003    0.000 {method 'fill' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
    91232    0.074    0.000    0.074    0.000 {method 'format' of 'str' objects}
    35956    0.006    0.000    0.006    0.000 {method 'get' of 'dict' objects}
    49469    7.111    0.000    7.111    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        9    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
   420026    0.197    0.000    0.197    0.000 {method 'insert' of 'list' objects}
   137047    0.035    0.000    0.035    0.000 {method 'items' of 'dict' objects}
       26    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
    13074    0.006    0.000    0.006    0.000 {method 'keys' of 'dict' objects}
  1167820    0.359    0.000    0.359    0.000 {method 'lower' of 'str' objects}
  1167812    1.799    0.000    1.799    0.000 {method 'match' of 're.Pattern' objects}
    82101    0.085    0.000    1.067    0.000 {method 'max' of 'numpy.ndarray' objects}
    82101    0.094    0.000    1.597    0.000 {method 'min' of 'numpy.ndarray' objects}
   411598    0.119    0.000    0.119    0.000 {method 'pop' of 'dict' objects}
   261321    0.055    0.000    0.055    0.000 {method 'pop' of 'set' objects}
   137189    0.093    0.000    0.093    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     6534  345.033    0.053  393.815    0.060 {method 'read_low_memory' of 'pandas._libs.parsers.TextReader' objects}
  2084994   16.267    0.000   16.267    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   420026    0.598    0.000    0.598    0.000 {method 'remove' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
    58797    0.158    0.000    0.158    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
    57984    0.054    0.000    0.054    0.000 {method 'rfind' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
    58034    0.035    0.000    0.035    0.000 {method 'rstrip' of 'str' objects}
  1167811    0.657    0.000    0.657    0.000 {method 'search' of 're.Pattern' objects}
        9    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
   226818    0.160    0.000    0.160    0.000 {method 'split' of 'str' objects}
  5880798    1.884    0.000    1.884    0.000 {method 'startswith' of 'str' objects}
    49469   11.948    0.000   11.948    0.000 {method 'unique' of 'pandas._libs.hashtable.PyObjectHashTable' objects}
    13067    0.007    0.000    0.007    0.000 {method 'update' of 'dict' objects}
    81730    0.038    0.000    0.038    0.000 {method 'upper' of 'str' objects}
   130660    0.037    0.000    0.037    0.000 {method 'values' of 'dict' objects}
    32642    0.189    0.000    0.189    0.000 {method 'view' of 'numpy.generic' objects}
  1351571    2.583    0.000    2.583    0.000 {method 'view' of 'numpy.ndarray' objects}
   387372    0.108    0.000    0.108    0.000 {pandas._libs.algos.ensure_object}
   216382    0.068    0.000    0.068    0.000 {pandas._libs.algos.ensure_platform_int}
    49464    0.888    0.000    0.888    0.000 {pandas._libs.algos.take_1d_int64_int64}
        5    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
    32425    2.653    0.000    2.653    0.000 {pandas._libs.algos.take_2d_axis0_float64_float64}
    45725    4.961    0.000    4.961    0.000 {pandas._libs.algos.take_2d_axis0_int64_int64}
    39294    9.112    0.000    9.112    0.000 {pandas._libs.algos.take_2d_axis0_object_object}
   391980    0.119    0.000    0.119    0.000 {pandas._libs.hashtable.object_hash}
     6533    0.007    0.000    0.007    0.000 {pandas._libs.internals.get_blkno_placements}
    19598    0.071    0.000    0.071    0.000 {pandas._libs.lib.array_equivalent_object}
       19    0.011    0.001    0.011    0.001 {pandas._libs.lib.dtypes_all_equal}
    95306    4.848    0.000    4.848    0.000 {pandas._libs.lib.infer_datetimelike_array}
    90423    9.069    0.000    9.379    0.000 {pandas._libs.lib.infer_dtype}
    13066    0.022    0.000    0.022    0.000 {pandas._libs.lib.is_all_arraylike}
     6534    0.002    0.000    0.002    0.000 {pandas._libs.lib.is_bool}
     6535    0.005    0.000    0.005    0.000 {pandas._libs.lib.is_float}
  1748903    0.613    0.000    0.613    0.000 {pandas._libs.lib.is_integer}
   242664    0.077    0.000    0.077    0.000 {pandas._libs.lib.is_iterator}
  4192517    3.457    0.000    3.508    0.000 {pandas._libs.lib.is_list_like}
  4375970    1.374    0.000    1.374    0.000 {pandas._libs.lib.is_scalar}
   296684   33.159    0.000   36.879    0.000 {pandas._libs.lib.maybe_convert_objects}
    78391    0.042    0.000    0.042    0.000 {pandas._libs.tslibs.np_datetime.is_unitless}
    52215    0.053    0.000    0.053    0.000 {pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype}
    58797    9.133    0.000    9.133    0.000 {pandas._libs.tslibs.parsing.concat_date_cols}
    19573  224.952    0.011  224.952    0.011 {pandas._libs.tslibs.vectorized.ints_to_pydatetime}


ACCESS_PANDAS()
         15141059 function calls (14981047 primitive calls) in 699.800 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(argsort)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(atleast_2d)
        8    0.000    0.000   30.681    3.835 <__array_function__ internals>:177(concatenate)
        4    0.000    0.000   30.681    7.670 <__array_function__ internals>:177(vstack)
    10002    0.048    0.000    0.066    0.000 <frozen importlib._bootstrap>:1053(_handle_fromlist)
        1    0.000    0.000  699.800  699.800 <string>:1(<module>)
        4    0.000    0.000    0.000    0.000 _dtype.py:178(_datetime_metadata_str)
       26    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       26    0.000    0.000    0.000    0.000 _dtype.py:330(_name_includes_bit_suffix)
       26    0.000    0.000    0.000    0.000 _dtype.py:344(_name_get)
   160000    0.100    0.000    0.843    0.000 _methods.py:39(_amax)
   160000    0.119    0.000    1.655    0.000 _methods.py:43(_amin)
    30000    0.033    0.000    0.495    0.000 _methods.py:55(_any)
   160000    0.450    0.000   17.730    0.000 _mixins.py:154(take)
    20000    0.147    0.000    0.150    0.000 _ufunc_config.py:132(geterr)
    20000    0.151    0.000    0.432    0.000 _ufunc_config.py:33(seterr)
    10000    0.014    0.000    0.014    0.000 _ufunc_config.py:426(__init__)
    10000    0.037    0.000    0.208    0.000 _ufunc_config.py:430(__enter__)
    10000    0.090    0.000    0.351    0.000 _ufunc_config.py:435(__exit__)
   300001    0.119    0.000    0.362    0.000 abc.py:117(__instancecheck__)
   170000    0.657    0.000   11.056    0.000 algorithms.py:1484(take)
    10000    0.136    0.000  430.380    0.043 array_ops.py:136(_na_arithmetic_op)
    10000    0.137    0.000  430.732    0.043 array_ops.py:231(comparison_op)
    10000    0.038    0.000  434.556    0.043 arraylike.py:40(__eq__)
    10000    0.139    0.000    0.726    0.000 base.py:1168(take)
    10000    0.008    0.000    0.008    0.000 base.py:1194(_maybe_disallow_fill)
   150000    0.029    0.000    0.029    0.000 base.py:166(kind)
    10000    0.017    0.000    0.017    0.000 base.py:1734(name)
        1    0.000    0.000    0.000    0.000 base.py:2381(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:2752(_is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:2801(_na_value)
        2    0.000    0.000    0.000    0.000 base.py:286(is_dtype)
    60000    0.012    0.000    0.012    0.000 base.py:324(ndim)
        2    0.000    0.000    0.000    0.000 base.py:3754(get_loc)
        1    0.000    0.000    0.000    0.000 base.py:413(_engine_type)
    10000    0.016    0.000    0.033    0.000 base.py:46(__len__)
    40002    0.057    0.000    0.236    0.000 base.py:5090(_values)
        1    0.000    0.000    0.000    0.000 base.py:5116(_get_engine_target)
    10000    0.093    0.000    0.094    0.000 base.py:5254(__contains__)
        4    0.000    0.000    0.000    0.000 base.py:5304(__getitem__)
    10002    0.101    0.000    0.225    0.000 base.py:54(shape)
    10000    0.122    0.000    0.380    0.000 base.py:5464(equals)
    30006    0.022    0.000    0.124    0.000 base.py:56(<genexpr>)
    10000    0.016    0.000    0.037    0.000 base.py:58(_validate_set_axis)
        2    0.000    0.000    0.000    0.000 base.py:6569(_maybe_cast_indexer)
    10000    0.066    0.000    0.094    0.000 base.py:690(_simple_new)
    20000    0.016    0.000    0.022    0.000 base.py:7277(ensure_index)
    10000    0.029    0.000    0.125    0.000 base.py:7372(maybe_extract_name)
    10000    0.018    0.000    0.023    0.000 base.py:839(is_)
    10000    0.012    0.000    0.012    0.000 base.py:870(_reset_identity)
        1    0.000    0.000    0.000    0.000 base.py:881(_engine)
    10002    0.021    0.000    0.029    0.000 base.py:925(__len__)
    10000    0.008    0.000    0.008    0.000 base.py:986(dtype)
       33    0.000    0.000    0.000    0.000 blocks.py:160(_consolidate_key)
   150000    0.481    0.000   16.061    0.000 blocks.py:1758(take_nd)
       19    0.000    0.000    0.000    0.000 blocks.py:200(fill_value)
    10004    0.034    0.000    0.058    0.000 blocks.py:2091(maybe_coerce_values)
    10004    0.036    0.000    0.041    0.000 blocks.py:2120(get_block_type)
       18    0.000    0.000    0.000    0.000 blocks.py:213(mgr_locs)
        4    0.000    0.000    0.001    0.000 blocks.py:2161(new_block_2d)
    10000    0.112    0.000    0.272    0.000 blocks.py:2172(new_block)
    10000    0.033    0.000    0.059    0.000 blocks.py:2186(check_ndim)
        5    0.000    0.000    0.000    0.000 blocks.py:2250(extend_blocks)
   190000    0.566    0.000    0.661    0.000 blocks.py:236(make_block_same_class)
    10037    0.013    0.000    0.013    0.000 blocks.py:500(dtype)
        2    0.000    0.000    0.000    0.000 blocks.py:827(iget)
    40000    0.180    0.000    6.136    0.000 blocks.py:861(take_nd)
    10000    0.058    0.000    0.058    0.000 cast.py:1422(sanitize_to_nanoseconds)
    30000    0.033    0.000    0.038    0.000 cast.py:508(ensure_dtype_can_hold_na)
   210000    0.629    0.000    1.160    0.000 cast.py:527(maybe_promote)
        1    0.000    0.000    0.000    0.000 cast.py:566(_maybe_promote_cached)
    30001    0.111    0.000    0.531    0.000 cast.py:574(_maybe_promote)
    10000    0.035    0.000    0.039    0.000 common.py:1048(is_numeric_v_string_like)
    30005    0.030    0.000    0.035    0.000 common.py:1154(needs_i8_conversion)
        4    0.000    0.000    0.000    0.000 common.py:1246(is_float_dtype)
    20002    0.053    0.000    0.130    0.000 common.py:1278(is_bool_dtype)
    10000    0.084    0.000    0.154    0.000 common.py:1403(is_1d_only_ea_obj)
    10000    0.009    0.000    0.012    0.000 common.py:1420(is_1d_only_ea_dtype)
    20001    0.036    0.000    0.048    0.000 common.py:1433(is_extension_array_dtype)
    30007    0.029    0.000    0.029    0.000 common.py:146(classes)
    30007    0.018    0.000    0.030    0.000 common.py:148(<lambda>)
        4    0.000    0.000    0.000    0.000 common.py:151(cast_scalar_indexer)
        2    0.000    0.000    0.000    0.000 common.py:151(classes_and_not_datetimelike)
        1    0.000    0.000    0.000    0.000 common.py:1532(_is_dtype)
   100003    0.065    0.000    0.108    0.000 common.py:1556(get_dtype)
        2    0.000    0.000    0.000    0.000 common.py:156(<lambda>)
    30009    0.080    0.000    0.172    0.000 common.py:1591(_is_dtype_type)
    30003    0.082    0.000    0.284    0.000 common.py:162(is_object_dtype)
    30000    0.064    0.000    0.150    0.000 common.py:1725(validate_all_hashable)
    60000    0.031    0.000    0.056    0.000 common.py:1744(<genexpr>)
    10000    0.015    0.000    0.020    0.000 common.py:1751(pandas_dtype)
        1    0.000    0.000    0.000    0.000 common.py:192(is_sparse)
        1    0.000    0.000    0.000    0.000 common.py:319(is_datetime64_dtype)
        1    0.000    0.000    0.000    0.000 common.py:352(is_datetime64tz_dtype)
    20000    0.020    0.000    0.029    0.000 common.py:362(apply_if_callable)
        1    0.000    0.000    0.000    0.000 common.py:393(is_timedelta64_dtype)
        1    0.000    0.000    0.000    0.000 common.py:427(is_period_dtype)
        1    0.000    0.000    0.000    0.000 common.py:544(is_string_dtype)
    10000    0.017    0.000    0.067    0.000 common.py:566(require_length_match)
    10000    0.058    0.000  434.711    0.043 common.py:57(new_method)
        1    0.000    0.000    0.000    0.000 common.py:573(condition)
    40000    0.081    0.000    0.182    0.000 common.py:585(is_dtype_equal)
        2    0.000    0.000    0.000    0.000 common.py:684(is_integer_dtype)
    10000    0.026    0.000    0.058    0.000 common.py:77(get_op_result_name)
    10000    0.074    0.000    0.318    0.000 common.py:96(is_bool_indexer)
    10000    0.062    0.000    0.184    0.000 config.py:116(_get_single_key)
    10000    0.051    0.000    0.331    0.000 config.py:134(_get_option)
    10000    0.020    0.000    0.351    0.000 config.py:262(__call__)
    10000    0.034    0.000    0.034    0.000 config.py:579(_select_options)
    10000    0.080    0.000    0.097    0.000 config.py:597(_get_root)
    20000    0.057    0.000    0.057    0.000 config.py:611(_get_deprecated_option)
    10000    0.009    0.000    0.015    0.000 config.py:638(_translate_key)
    10000    0.017    0.000    0.068    0.000 config.py:650(_warn_if_deprecated)
   170001    0.138    0.000    0.844    0.000 construction.py:399(extract_array)
    40004    0.056    0.000    0.064    0.000 construction.py:461(ensure_wrapped_if_datetimelike)
    10000    0.133    0.000    0.436    0.000 construction.py:493(sanitize_array)
    10000    0.021    0.000    0.037    0.000 construction.py:676(_sanitize_ndim)
    10000    0.019    0.000    0.026    0.000 construction.py:713(_sanitize_str_dtypes)
    10000    0.012    0.000    0.014    0.000 construction.py:733(_maybe_repeat)
    10000    0.084    0.000    0.146    0.000 construction.py:744(_try_cast)
    10000    0.025    0.000    0.043    0.000 construction.py:861(is_empty_data)
        1    0.000    0.000    0.000    0.000 datetimelike.py:2138(ensure_arraylike_for_datetimelike)
        1    0.000    0.000    0.000    0.000 datetimelike.py:2206(validate_inferred_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:2243(maybe_infer_freq)
        2    0.000    0.000    0.000    0.000 datetimelike.py:330(__array__)
    10000    0.069    0.000    0.213    0.000 datetimelike.py:637(_validate_scalar)
        1    0.000    0.000    0.000    0.000 datetimelike.py:926(freq)
    20000    0.008    0.000    0.008    0.000 datetimes.py:194(_scalar_type)
        1    0.000    0.000    0.000    0.000 datetimes.py:1980(_sequence_to_dt64ns)
        1    0.000    0.000    0.000    0.000 datetimes.py:2215(maybe_convert_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2314(_validate_dt64_dtype)
        2    0.000    0.000    0.000    0.000 datetimes.py:2366(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:265(_simple_new)
        1    0.000    0.000    0.000    0.000 datetimes.py:286(_from_sequence)
        1    0.000    0.000    0.000    0.000 datetimes.py:290(_from_sequence_not_strict)
    10000    0.065    0.000    0.080    0.000 datetimes.py:449(_unbox_scalar)
    10000    0.008    0.000    0.008    0.000 datetimes.py:458(_check_compatible_with)
    70006    0.024    0.000    0.024    0.000 datetimes.py:495(dtype)
        2    0.000    0.000    0.000    0.000 datetimes.py:520(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:562(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:94(tz_to_dtype)
    10000    0.011    0.000    0.033    0.000 dispatch.py:13(should_extension_dispatch)
   150000    0.275    0.000    0.304    0.000 dtypes.py:1333(__init__)
        1    0.000    0.000    0.000    0.000 dtypes.py:977(is_dtype)
    10000    0.039    0.000  430.161    0.043 expressions.py:225(evaluate)
    10000    0.050    0.000  430.122    0.043 expressions.py:64(_evaluate_standard)
    20002    0.070    0.000    0.070    0.000 flags.py:49(__init__)
    20002    0.015    0.000    0.015    0.000 flags.py:53(allows_duplicate_labels)
    20002    0.055    0.000    0.055    0.000 flags.py:85(allows_duplicate_labels)
        2    0.000    0.000    0.000    0.000 frame.py:3703(_ixs)
    20000    0.290    0.000  264.811    0.013 frame.py:3758(__getitem__)
    10000    0.218    0.000  263.876    0.026 frame.py:3832(_getitem_bool_array)
        2    0.000    0.000    0.000    0.000 frame.py:4257(_box_col_values)
        1    0.000    0.000    0.001    0.001 frame.py:4271(_clear_item_cache)
    10000    0.020    0.000    0.029    0.000 frame.py:4274(_get_item_cache)
    10000    0.004    0.000    0.004    0.000 frame.py:600(_constructor)
    10000    0.041    0.000    0.148    0.000 frame.py:609(__init__)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:1034(_argsort_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:1038(argsort)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:51(_wrapfunc)
    20002    0.142    0.000    0.213    0.000 generic.py:259(__init__)
    20002    0.021    0.000    0.021    0.000 generic.py:332(attrs)
    40004    0.017    0.000    0.017    0.000 generic.py:353(flags)
    10000    0.181    0.000   92.268    0.009 generic.py:3873(_take)
    10000    0.077    0.000   92.807    0.009 generic.py:3894(_take_with_is_copy)
   510013    0.291    0.000    0.385    0.000 generic.py:40(_check)
    10000    0.019    0.000    0.036    0.000 generic.py:4114(_set_is_copy)
   510013    0.298    0.000    0.692    0.000 generic.py:45(_instancecheck)
    30000    0.039    0.000    0.039    0.000 generic.py:550(_get_axis_number)
    20000    0.035    0.000    0.046    0.000 generic.py:564(_get_axis)
    10000    0.031    0.000    0.059    0.000 generic.py:570(_get_block_manager_axis)
    20002    0.285    0.000    0.461    0.000 generic.py:5844(__finalize__)
    30000    0.060    0.000    0.060    0.000 generic.py:5888(__getattr__)
    40004    7.105    0.000    7.433    0.000 generic.py:5904(__setattr__)
    10000    0.066    0.000   66.424    0.007 generic.py:5959(_protect_consolidate)
    10000    0.051    0.000   66.475    0.007 generic.py:5973(_consolidate_inplace)
    10000    0.046    0.000   66.325    0.007 generic.py:5977(f)
    10000    0.037    0.000    0.040    0.000 indexing.py:2488(convert_to_index_sliceable)
    10000    0.057    0.000    0.818    0.000 indexing.py:2522(check_bool_indexer)
    20000    0.044    0.000    0.062    0.000 indexing.py:2656(check_deprecated_indexers)
   190000    0.172    0.000    0.377    0.000 inference.py:188(is_array_like)
    60000    0.059    0.000    0.096    0.000 inference.py:325(is_hashable)
    10000    0.068    0.000    0.081    0.000 managers.py:1061(from_blocks)
        2    0.000    0.000    0.000    0.000 managers.py:1129(iget)
    10002    0.012    0.000    0.012    0.000 managers.py:172(blknos)
    10001    0.019    0.000    0.019    0.000 managers.py:1846(is_consolidated)
        2    0.000    0.000    0.000    0.000 managers.py:1854(_consolidate_check)
        2    0.000    0.000    0.000    0.000 managers.py:1860(<listcomp>)
        1    0.000    0.000   59.237   59.237 managers.py:1864(_consolidate_inplace)
    10002    0.007    0.000    0.007    0.000 managers.py:188(blklocs)
    10002    0.046    0.000    0.055    0.000 managers.py:1891(__init__)
    10000    0.054    0.000    0.395    0.000 managers.py:1934(from_array)
    10002    0.011    0.000    0.011    0.000 managers.py:2009(_block)
    70000    0.103    0.000    0.127    0.000 managers.py:2058(dtype)
    20000    0.023    0.000    0.023    0.000 managers.py:2069(internal_values)
    10000    0.022    0.000    0.058    0.000 managers.py:228(set_axis)
        1    0.000    0.000   59.237   59.237 managers.py:2319(_consolidate)
       66    0.000    0.000    0.000    0.000 managers.py:2324(<lambda>)
        5   28.555    5.711   59.237   11.847 managers.py:2361(_merge_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:2372(<listcomp>)
    10000    0.005    0.000    0.005    0.000 managers.py:238(items)
        4    0.000    0.000    0.000    0.000 managers.py:2381(<listcomp>)
    30002    0.029    0.000    0.029    0.000 managers.py:2433(_using_copy_on_write)
    10000    0.020    0.000   59.276    0.006 managers.py:673(consolidate)
    10000    0.141    0.000   23.023    0.002 managers.py:689(reindex_indexer)
    10000    0.500    0.000   22.697    0.002 managers.py:751(<listcomp>)
    10000    0.169    0.000   25.221    0.003 managers.py:944(take)
    10001    0.007    0.000    0.007    0.000 managers.py:997(__init__)
    50002    0.034    0.000    0.160    0.000 missing.py:108(isna)
    10000    0.056    0.000    0.056    0.000 missing.py:140(dispatch_fill_zeros)
    50002    0.060    0.000    0.126    0.000 missing.py:191(_isna)
    10000    0.027    0.000    0.031    0.000 missing.py:460(array_equivalent)
    30019    0.112    0.000    0.151    0.000 missing.py:645(na_value_for_dtype)
    40001    0.113    0.000    0.273    0.000 missing.py:699(is_valid_na_for_dtype)
        8    0.000    0.000    0.000    0.000 multiarray.py:152(concatenate)
       26    0.000    0.000    0.000    0.000 numerictypes.py:282(issubclass_)
       13    0.000    0.000    0.000    0.000 numerictypes.py:356(issubdtype)
   150000    0.222    0.000    6.169    0.000 numpy_.py:112(_from_backing_data)
   150015    0.044    0.000    0.044    0.000 numpy_.py:118(dtype)
   150000    0.037    0.000    0.037    0.000 numpy_.py:186(_validate_scalar)
   150000    0.517    0.000    1.201    0.000 numpy_.py:69(__init__)
        1    0.000    0.000    0.000    0.000 prof.py:14(load_pandas)
        1    0.277    0.277  699.800  699.800 prof.py:52(access_pandas)
        1    0.000    0.000    0.000    0.000 range.py:189(_constructor)
        1    0.000    0.000    0.179    0.179 range.py:195(_data)
        1    0.000    0.000    0.000    0.000 range.py:247(start)
        1    0.000    0.000    0.000    0.000 range.py:270(stop)
        1    0.000    0.000    0.000    0.000 range.py:293(step)
    10003    0.028    0.000    0.028    0.000 range.py:353(dtype)
    20000    0.018    0.000    0.020    0.000 range.py:541(equals)
    80002    0.047    0.000    0.075    0.000 range.py:946(__len__)
        2    0.000    0.000    0.000    0.000 series.py:1267(_set_as_cached)
    10000    0.150    0.000    2.812    0.000 series.py:3194(_construct_result)
    10002    0.261    0.000    2.303    0.000 series.py:342(__init__)
    10000    0.008    0.000    0.008    0.000 series.py:546(_constructor)
    10000    0.059    0.000    0.125    0.000 series.py:565(_set_axis)
    70000    0.043    0.000    0.170    0.000 series.py:596(dtype)
    40000    0.126    0.000    0.155    0.000 series.py:611(name)
    10000    0.250    0.000  434.518    0.043 series.py:6233(_cmp_method)
    30000    0.085    0.000    0.235    0.000 series.py:661(name)
    20000    0.033    0.000    0.056    0.000 series.py:708(_values)
    10000    0.012    0.000    0.056    0.000 series.py:764(__len__)
    10000    0.022    0.000    0.051    0.000 series.py:846(__array__)
        4    0.000    0.000    0.000    0.000 shape_base.py:207(_arrays_for_stack_dispatcher)
        4    0.000    0.000    0.000    0.000 shape_base.py:218(_vhstack_dispatcher)
        4    0.000    0.000   30.681    7.670 shape_base.py:223(vstack)
        4    0.000    0.000    0.000    0.000 shape_base.py:77(_atleast_2d_dispatcher)
        4    0.000    0.000    0.000    0.000 shape_base.py:81(atleast_2d)
   150000    0.165    0.000    0.165    0.000 string_.py:101(__init__)
   150000    0.895    0.000    5.947    0.000 string_.py:305(__init__)
   150000    1.981    0.000    2.809    0.000 string_.py:313(_validate)
       15    0.000    0.000    0.000    0.000 string_.py:95(na_value)
   190000    1.153    0.000    7.943    0.000 take.py:120(_take_nd_ndarray)
        4    0.000    0.000    0.000    0.000 take.py:288(_get_take_nd_function_cached)
   190000    0.215    0.000    0.215    0.000 take.py:326(_get_take_nd_function)
    10000    0.162    0.000    1.671    0.000 take.py:350(wrapper)
   190000    0.433    0.000    1.243    0.000 take.py:554(_take_preprocess_indexer_and_fill_value)
200000/190000    0.792    0.000   10.138    0.000 take.py:57(take_nd)
    30001    0.008    0.000    0.008    0.000 typing.py:1737(cast)
   160000    0.457    0.000    3.255    0.000 utils.py:191(validate_indices)
    10000    0.581    0.000    1.026    0.000 utils.py:243(maybe_convert_indices)
    10000    0.127    0.000    0.520    0.000 utils.py:430(check_array_indexer)
    10000    0.014    0.000    0.014    0.000 {built-in method __new__ of type object at 0x55649767b9a0}
   300001    0.243    0.000    0.243    0.000 {built-in method _abc._abc_instancecheck}
    10000  430.071    0.043  430.071    0.043 {built-in method _operator.eq}
        1    0.000    0.000    0.000    0.000 {built-in method _simple_new}
    30000    0.030    0.000    0.086    0.000 {built-in method builtins.all}
    20000    0.009    0.000    0.009    0.000 {built-in method builtins.callable}
        1    0.000    0.000  699.800  699.800 {built-in method builtins.exec}
   550025    0.107    0.000    0.110    0.000 {built-in method builtins.getattr}
   260008    0.094    0.000    0.125    0.000 {built-in method builtins.hasattr}
    70000    0.039    0.000    0.039    0.000 {built-in method builtins.hash}
2580132/2550132    1.106    0.000    2.151    0.000 {built-in method builtins.isinstance}
    70081    0.025    0.000    0.025    0.000 {built-in method builtins.issubclass}
800025/690021    0.324    0.000    0.425    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.179    0.179    0.179    0.179 {built-in method numpy.arange}
    10018    0.048    0.000    0.048    0.000 {built-in method numpy.asanyarray}
400000/390000    0.348    0.000    0.423    0.000 {built-in method numpy.asarray}
    20/12   30.681    1.534   30.681    2.557 {built-in method numpy.core._multiarray_umath.implement_array_function}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.datetime_data}
   190000    0.503    0.000    0.503    0.000 {built-in method numpy.empty}
    40000    0.043    0.000    0.043    0.000 {built-in method numpy.geterrobj}
    20000    0.090    0.000    0.090    0.000 {built-in method numpy.seterrobj}
   150000    0.795    0.000    0.795    0.000 {built-in method pandas._libs.lib.is_string_array}
    50002    0.058    0.000    0.058    0.000 {built-in method pandas._libs.missing.checknull}
        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
        1    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
    10000    0.024    0.000    0.024    0.000 {method '_from_backing_data' of 'pandas._libs.arrays.NDArrayBacked' objects}
        2    0.000    0.000    0.000    0.000 {method '_rebuild_blknos_and_blklocs' of 'pandas._libs.internals.BlockManager' objects}
    30000    0.052    0.000    0.548    0.000 {method 'any' of 'numpy.ndarray' objects}
       37    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        4    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        1    0.001    0.001    0.001    0.001 {method 'clear' of 'dict' objects}
    20000    0.072    0.000    0.072    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       17    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
    10004    0.009    0.000    0.009    0.000 {method 'get' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'get_loc' of 'pandas._libs.index.IndexEngine' objects}
   160000    0.130    0.000    0.973    0.000 {method 'max' of 'numpy.ndarray' objects}
   160000    0.139    0.000    1.794    0.000 {method 'min' of 'numpy.ndarray' objects}
    10000  169.940    0.017  169.940    0.017 {method 'nonzero' of 'numpy.ndarray' objects}
   350000    2.741    0.000    2.741    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    10000    0.017    0.000    0.017    0.000 {method 'split' of 'str' objects}
    10000    0.115    0.000    0.115    0.000 {method 'take' of 'numpy.ndarray' objects}
    20000    0.103    0.000    0.103    0.000 {method 'view' of 'numpy.ndarray' objects}
   200000    0.057    0.000    0.057    0.000 {pandas._libs.algos.ensure_platform_int}
   150000    1.442    0.000    1.442    0.000 {pandas._libs.algos.take_1d_object_object}
    10000    0.958    0.000    0.958    0.000 {pandas._libs.algos.take_2d_axis1_float64_float64}
    20000    1.670    0.000    1.670    0.000 {pandas._libs.algos.take_2d_axis1_int64_int64}
    10000    0.400    0.000    0.400    0.000 {pandas._libs.algos.take_2d_axis1_object_object}
        4    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        4    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
    10000    0.006    0.000    0.006    0.000 {pandas._libs.lib.is_iterator}
   230000    0.142    0.000    0.154    0.000 {pandas._libs.lib.is_list_like}
   150004    0.070    0.000    0.070    0.000 {pandas._libs.lib.is_scalar}
    40000    0.018    0.000    0.018    0.000 {pandas._libs.lib.item_from_zerodim}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.np_datetime.is_unitless}


LOAD_SQLITE()
         461789558 function calls in 758.014 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    8.330    8.330  758.014  758.014 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
  2263111    3.735    0.000    8.468    0.000 codecs.py:319(decode)
 65323332  297.087    0.000  657.775    0.000 csv.py:107(__next__)
        1    0.000    0.000    0.000    0.000 csv.py:81(__init__)
        1    0.000    0.000    0.000    0.000 csv.py:90(__iter__)
130646663   51.398    0.000   51.398    0.000 csv.py:93(fieldnames)
        1   81.695   81.695  749.683  749.683 prof.py:57(load_sqlite)
  2263111    4.733    0.000    4.733    0.000 {built-in method _codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 {built-in method _csv.reader}
        1    0.007    0.007    0.007    0.007 {built-in method _sqlite3.connect}
        1    0.001    0.001  758.014  758.014 {built-in method builtins.exec}
130646663   13.258    0.000   13.258    0.000 {built-in method builtins.len}
 65323333  287.564    0.000  296.032    0.000 {built-in method builtins.next}
        1    0.000    0.000    0.000    0.000 {built-in method io.open}
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
 65323331   10.205    0.000   10.205    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'cursor' of 'sqlite3.Connection' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.002    0.002    0.002    0.002 {method 'execute' of 'sqlite3.Cursor' objects}


ACCESS_SQLITE()
         7 function calls in 0.000 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 prof.py:57(load_sqlite)
        1    0.000    0.000    0.000    0.000 prof.py:78(access_sqlite)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method 'cursor' of 'sqlite3.Connection' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'execute' of 'sqlite3.Cursor' objects}


